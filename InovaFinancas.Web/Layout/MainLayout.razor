
@inherits LayoutComponentBase
<MudThemeProvider @ref="_mudThemeProvider" @bind-IsDarkMode="isDarkMod" Theme="Configuration.Theme"/>
<MudSnackbarProvider/>
<MudDialogProvider/>
<MudPopoverProvider />


<AuthorizeView>
	<Authorized>
		<MudLayout>
			<MudAppBar>
				<MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
								OnClick="ToggleMenu"/>
				Inova Finanças
				<MudSpacer />
				<MudText Typo="Typo.caption">
					@context.User.Identity?.Name
				</MudText>
				<MudSwitch Color="Color.Inherit" @bind-Value="@isDarkMod" Class="ma-4" T="bool" ThumbIcon="@Icons.Material.TwoTone.Lightbulb" />
			</MudAppBar>
			<MudDrawer @bind-Open=@isOpenMenu >
				<NavMenu></NavMenu>
			</MudDrawer>
			<MudMainContent>
				<MudContainer Class="mt-4">
					@Body
				</MudContainer>
			</MudMainContent>
		</MudLayout>
	</Authorized>
	<NotAuthorized>
		<LoginRedirect></LoginRedirect>
	</NotAuthorized>
</AuthorizeView>


@* <MudLayout>
	<MudAppBar>
		Inova Finanças
		<MudSpacer />
		<MudText Typo="Typo.caption">
			user
		</MudText>
		<MudSwitch @bind-Value="@isDarkMod" />
	</MudAppBar>
	<MudMainContent>
		<MudContainer>
			@Body
		</MudContainer>
	</MudMainContent>
</MudLayout> *@

@code{

	private bool isOpenMenu = true;
	private bool isDarkMod = true;
	private MudThemeProvider _mudThemeProvider=null!;

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			isDarkMod = await _mudThemeProvider.GetSystemPreference();
			await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChange);
			StateHasChanged();
		}
	}

	private Task OnSystemPreferenceChange(bool newValue)
	{
		isDarkMod = newValue;
		StateHasChanged();
		return Task.CompletedTask;
	}

	private void ToggleMenu()
	{
		isOpenMenu = !isOpenMenu;
	}
}
